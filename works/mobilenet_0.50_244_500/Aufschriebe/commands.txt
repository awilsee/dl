********** MobileNet with Dog Photos on Android ***********

1) 
IMAGE_SIZE=224
VERSION=0.5
ARCHITECTURE=mobilenet_${VERSION}_${IMAGE_SIZE}
training_steps=5000
learning_rate=1

2)
python -m scripts.retrain \
  --bottleneck_dir=tf_files/bottlenecks \
  --how_many_training_steps=${training_steps} \
  --model_dir=tf_files/models/ \
  --summaries_dir=tf_files/training_summaries/"${ARCHITECTURE}" \
  --output_graph=tf_files/retrained_${ARCHITECTURE}_${training_steps}_${learning_rate}.pb \
  --output_labels=tf_files/retrained_${ARCHITECTURE}_${training_steps}_${learning_rate}.txt \
  --architecture="${ARCHITECTURE}" \
  --image_dir=/home/alice/dog_photos \
  --learning_rate=${learning_rate}

3) 
python -m scripts.label_image \
    --graph=tf_files/retrained_${ARCHITECTURE}_${training_steps}_${learning_rate}.pb  \
    --labels=tf_files/retrained_${ARCHITECTURE}_${training_steps}_${learning_rate}.txt \
    --image=/home/alice/Schreibtisch/dl/label_image_pics/Affenpinscher_00001.jpg

python -m scripts.label_image \
    --graph=tf_files/retrained_${ARCHITECTURE}_${training_steps}_${learning_rate}.pb  \
    --labels=tf_files/retrained_${ARCHITECTURE}_${training_steps}_${learning_rate}.txt \
    --image=/home/alice/Schreibtisch/dl/label_image_pics/n02085620_949.jpg

4)
python -m tensorflow.python.tools.optimize_for_inference \
  --input=tf_files/retrained_${ARCHITECTURE}_${training_steps}_${learning_rate}.pb \
  --output=tf_files/optimized_${ARCHITECTURE}_${training_steps}_${learning_rate}.pb \
  --input_names="input" \
  --output_names="final_result"

5) 
python -m scripts.label_image \
    --graph=tf_files/optimized_${ARCHITECTURE}_${training_steps}_${learning_rate}.pb  \
    --image=/home/alice/Schreibtisch/dl/label_image_pics/Affenpinscher_00001.jpg

python -m scripts.label_image \
    --graph=tf_files/optimized_${ARCHITECTURE}_${training_steps}_${learning_rate}.pb  \
    --image=/home/alice/Schreibtisch/dl/label_image_pics/n02085620_949.jpg

6)
python -m scripts.quantize_graph \
  --input=tf_files/optimized_${ARCHITECTURE}_${training_steps}_${learning_rate}.pb \
  --output=tf_files/rounded_${ARCHITECTURE}_${training_steps}_${learning_rate}.pb \
  --output_node_names=final_result \
  --mode=weights_rounded

7)
python -m scripts.label_image \
    --graph=tf_files/rounded_${ARCHITECTURE}_${training_steps}_${learning_rate}.pb  \
    --image=/home/alice/Schreibtisch/dl/label_image_pics/Affenpinscher_00001.jpg

python -m scripts.label_image \
    --graph=tf_files/rounded_${ARCHITECTURE}_${training_steps}_${learning_rate}.pb  \
    --image=/home/alice/Schreibtisch/dl/label_image_pics/n02085620_949.jpg


Tensorboard:
pkill -f "tensorboard"
tensorboard --logdir tf_files/training_summaries &
python -m scripts.graph_pb2tb tf_files/training_summaries/retrained \
  tf_files/retrained_${ARCHITECTURE}_${training_steps}_${learning_rate}.pb 

python -m scripts.graph_pb2tb tf_files/training_summaries/optimized \
  tf_files/optimized_${ARCHITECTURE}_${training_steps}_${learning_rate}.pb

Compressed rates:
1) Retrained:
gzip -c tf_files/retrained_${ARCHITECTURE}_${training_steps}_${learning_rate}.pb > tf_files/retrained_${ARCHITECTURE}_${training_steps}_${learning_rate}.pb.gz

gzip -l tf_files/optimized_${ARCHITECTURE}_${training_steps}_${learning_rate}.pb.gz

2) Optimized:
gzip -c tf_files/optimized_${ARCHITECTURE}_${training_steps}_${learning_rate}.pb > tf_files/optimized_${ARCHITECTURE}_${training_steps}_${learning_rate}.pb.gz

gzip -l tf_files/optimized_${ARCHITECTURE}_${training_steps}_${learning_rate}.pb.gz

3)
gzip -c tf_files/rounded_${ARCHITECTURE}_${training_steps}_${learning_rate}.pb > tf_files/rounded_${ARCHITECTURE}_${training_steps}_${learning_rate}.pb.gz

gzip -l tf_files/rounded_${ARCHITECTURE}_${training_steps}_${learning_rate}.pb.gz

old:

https://codelabs.developers.google.com/codelabs/tensorflow-for-poets/index.html

bazel-bin/tensorflow/examples/image_retraining/retrain \
  --bottleneck_dir=/home/alice/tensorflow_graphs_dog/bottlenecks \
  --how_many_training_steps=500 \
  --model_dir=/home/alice/tensorflow_graphs_dog/models/ \
  --summaries_dir=/home/alice/tensorflow_graphs_dog/training_dog_summaries/mobilenet_1.0_224 \
  --output_graph=/home/alice/tensorflow_graphs_dog/retrained_dog_graph.pb \
  --output_labels=/home/alice/tensorflow_graphs_dog/retrained_dog_labels.txt \
  --architecture=mobilenet_0.50_224 --image_dir=/home/alice/dog_photos


bazel-bin/tensorflow/examples/label_image/label_image \
--graph=/home/alice/tensorflow_graphs_dog/retrained_dog_graph.pb --labels=/home/alice/tensorflow_graphs_dog/retrained_dog_labels.txt \
--output_layer=final_result --input_layer=input \
--image=/home/alice/dog_photos/101.Maltese/Maltese_06730.jpg --input_width=224 --input_height=224

bazel-bin/tensorflow/examples/label_image/label_image \
--graph=/home/alice/tensorflow_graphs_dog/retrained_dog_graph.pb --labels=/home/alice/tensorflow_graphs_dog/retrained_dog_labels.txt \
--output_layer=final_result --input_layer=input \
--image="/home/alice/Schreibtisch/Rohdaten/Stanford Dogs Dataset/Images/n02085620-Chihuahua/n02085620_949.jpg" --input_width=224 --input_height=224


python -m tensorflow.python.tools.optimize_for_inference \
  --input=/home/alice/tensorflow_graphs_dog/retrained_dog_graph.pb \
  --output=/home/alice/tensorflow_graphs_dog/optimized_dog_graph.pb \
  --input_names="input" \
  --output_names="final_result"
